// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: profile_total_views.sql

package dbs

import (
	"context"
)

const profileTotalViews = `-- name: ProfileTotalViews :one
SELECT count
FROM profile_total_views
WHERE user_id = $1
`

func (q *Queries) ProfileTotalViews(ctx context.Context, userID int64) (int64, error) {
	row := q.queryRow(ctx, q.profileTotalViewsStmt, profileTotalViews, userID)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const profileTotalViewsInc = `-- name: ProfileTotalViewsInc :exec
UPDATE profile_total_views
SET count = count + 1
WHERE user_id = $1
`

func (q *Queries) ProfileTotalViewsInc(ctx context.Context, userID int64) error {
	_, err := q.exec(ctx, q.profileTotalViewsIncStmt, profileTotalViewsInc, userID)
	return err
}

const profileTotalViewsNew = `-- name: ProfileTotalViewsNew :exec
INSERT INTO profile_total_views (user_id, count)
VALUES ($1, 0)
ON CONFLICT DO NOTHING
`

func (q *Queries) ProfileTotalViewsNew(ctx context.Context, userID int64) error {
	_, err := q.exec(ctx, q.profileTotalViewsNewStmt, profileTotalViewsNew, userID)
	return err
}
