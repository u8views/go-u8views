// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: profile_time_period_views.sql

package dbs

import (
	"context"
	"time"
)

const profileTimePeriodViews = `-- name: ProfileTimePeriodViews :one
SELECT COALESCE(SUM(count), 0)::BIGINT as count
FROM profile_hourly_views_stats
WHERE user_id = $1
  AND time >= $2
`

type ProfileTimePeriodViewsParams struct {
	UserID     int64
	TimePeriod time.Time
}

func (q *Queries) ProfileTimePeriodViews(ctx context.Context, arg ProfileTimePeriodViewsParams) (int64, error) {
	row := q.queryRow(ctx, q.profileTimePeriodViewsStmt, profileTimePeriodViews, arg.UserID, arg.TimePeriod)
	var count int64
	err := row.Scan(&count)
	return count, err
}
