// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: user_nicknames.sql

package dbs

import (
	"context"
)

const userNicknamesDelete = `-- name: UserNicknamesDelete :exec
DELETE FROM user_nicknames
WHERE old_nickname = $1
  AND user_id IN (
    SELECT id FROM users
    WHERE social_provider = $2
  )
`

type UserNicknamesDeleteParams struct {
	OldNickname    string
	SocialProvider SocialProvider
}

func (q *Queries) UserNicknamesDelete(ctx context.Context, arg UserNicknamesDeleteParams) error {
	_, err := q.exec(ctx, q.userNicknamesDeleteStmt, userNicknamesDelete, arg.OldNickname, arg.SocialProvider)
	return err
}

const userNicknamesGetByOldUsername = `-- name: UserNicknamesGetByOldUsername :one
SELECT u.id, u.social_provider_user_id, u.username, u.name
FROM user_nicknames 
JOIN users u
    ON user_id = u.id
WHERE old_nickname = $1
    AND u.social_provider = $2
ORDER BY u.last_login_at DESC
LIMIT 1
`

type UserNicknamesGetByOldUsernameParams struct {
	OldNickname    string
	SocialProvider SocialProvider
}

type UserNicknamesGetByOldUsernameRow struct {
	ID                   int64
	SocialProviderUserID string
	Username             string
	Name                 string
}

func (q *Queries) UserNicknamesGetByOldUsername(ctx context.Context, arg UserNicknamesGetByOldUsernameParams) (UserNicknamesGetByOldUsernameRow, error) {
	row := q.queryRow(ctx, q.userNicknamesGetByOldUsernameStmt, userNicknamesGetByOldUsername, arg.OldNickname, arg.SocialProvider)
	var i UserNicknamesGetByOldUsernameRow
	err := row.Scan(
		&i.ID,
		&i.SocialProviderUserID,
		&i.Username,
		&i.Name,
	)
	return i, err
}

const userNicknamesNew = `-- name: UserNicknamesNew :exec
INSERT INTO user_nicknames (user_id, old_nickname)
VALUES ($1, $2)
ON CONFLICT DO NOTHING
`

type UserNicknamesNewParams struct {
	UserID      int64
	OldNickname string
}

func (q *Queries) UserNicknamesNew(ctx context.Context, arg UserNicknamesNewParams) error {
	_, err := q.exec(ctx, q.userNicknamesNewStmt, userNicknamesNew, arg.UserID, arg.OldNickname)
	return err
}
